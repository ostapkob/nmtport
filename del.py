a =[[(0, None),
  (1, None),
  (2, None),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  False],
 [(0, None),
  (1, None),
  (2, None),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, None),
  (2, 1),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, None),
  (2, 1),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, 1),
  (2, None),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, 1),
  (2, None),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, 1),
  (2, 1),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, 1),
  (2, 1),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, None),
  (2, None),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, None),
  (2, None),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, None),
  (2, 1),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, None),
  (2, 1),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, 1),
  (2, None),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, 1),
  (2, None),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, 1),
  (2, 1),
  (3, None),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, 1),
  (1, 1),
  (2, 1),
  (3, 1),
  (4, 1),
  (5, None),
  (6, None),
  (7, None),
  (8, None),
  (9, 0),
  (10, None),
  (11, None),
  (12, None),
  (13, None),
  (14, 0),
  True],
 [(0, None),
  (1, None),
  (2, None),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  False],
 [(0, None),
  (1, None),
  (2, 1),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, None),
  (1, 1),
  (2, None),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, None),
  (1, 1),
  (2, 1),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, 1),
  (1, None),
  (2, None),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, 1),
  (1, None),
  (2, 1),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, 1),
  (1, 1),
  (2, None),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, 1),
  (1, 1),
  (2, 1),
  (3, 1),
  (4, None),
  (5, None),
  (6, None),
  (7, None),
  (8, 0),
  (9, None),
  (10, None),
  (11, None),
  (12, None),
  (13, 0),
  (14, None),
  True],
 [(0, None),
  (1, None),
  (2, 1),
  (3, None),
  (4, None),
  (5, None),
  (6, None),
  (7, 0),
  (8, None),
  (9, None),
  (10, None),
  (11, None),
  (12, 0),
  (13, None),
  (14, None),
  False],
 [(0, None),
  (1, 1),
  (2, 1),
  (3, None),
  (4, None),
  (5, None),
  (6, None),
  (7, 0),
  (8, None),
  (9, None),
  (10, None),
  (11, None),
  (12, 0),
  (13, None),
  (14, None),
  True],
 [(0, 1),
  (1, None),
  (2, 1),
  (3, None),
  (4, None),
  (5, None),
  (6, None),
  (7, 0),
  (8, None),
  (9, None),
  (10, None),
  (11, None),
  (12, 0),
  (13, None),
  (14, None),
  True],
 [(0, 1),
  (1, 1),
  (2, 1),
  (3, None),
  (4, None),
  (5, None),
  (6, None),
  (7, 0),
  (8, None),
  (9, None),
  (10, None),
  (11, None),
  (12, 0),
  (13, None),
  (14, None),
  True],
 [(0, None),
  (1, 1),
  (2, None),
  (3, None),
  (4, None),
  (5, None),
  (6, 0),
  (7, None),
  (8, None),
  (9, None),
  (10, None),
  (11, 0),
  (12, None),
  (13, None),
  (14, None),
  False],
 [(0, 1),
  (1, 1),
  (2, None),
  (3, None),
  (4, None),
  (5, None),
  (6, 0),
  (7, None),
  (8, None),
  (9, None),
  (10, None),
  (11, 0),
  (12, None),
  (13, None),
  (14, None),
  True],
 [(0, 1),
  (1, None),
  (2, None),
  (3, None),
  (4, None),
  (5, 0),
  (6, None),
  (7, None),
  (8, None),
  (9, None),
  (10, 0),
  (11, None),
  (12, None),
  (13, None),
  (14, None),
  False]]


n_data = []
for i in a:
    v = i[:-1]
    r = i[-1]
    el = []
    for j in v:
        if j[1] is not None:
            el.append(j)
    n_data.append([el, r])

from pprint import pprint 

pprint(n_data) 
